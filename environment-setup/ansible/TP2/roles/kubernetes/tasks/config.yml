- name: Handling of DNS packets larger than 1500 bytes
  shell: >
    kubectl patch configmap/coredns -n kube-system --type merge -p \
    '{"data": {"Corefile": ".:53 {\n    log  \n    errors\n    health {\n       lameduck 5s\n    }\n    ready\n    kubernetes cluster.local in-addr.arpa ip6.arpa {\n       pods insecure\n       fallthrough in-addr.arpa ip6.arpa\n       ttl 30\n    }\n    prometheus :9153\n    forward . /etc/resolv.conf {\n       force_tcp\n       max_concurrent 1000\n    }\n    cache 3\n    loop\n    reload\n    loadbalance\n    bufsize 1024\n}\n"}}'

- name: Create k8s-configs directory
  file:
    path: ~/k8s-configs/
    state: directory
    mode: 0755

- name: Generate Storage Class Configuration
  become: true
  template:
    src: "k8s-storage-class.yml.j2"
    dest: "~/k8s-configs/k8s-storage-class.yml"

- name: Create StorageClass
  become: true
  shell: kubectl apply -f ~/k8s-configs/k8s-storage-class.yml

- name: Generate file with user k8s configuration
  template:
    src: "k8s-user.yml.j2"
    dest: "~/k8s-configs/k8s-user-{{item.username}}.yml"
  with_items: "{{ students }}"
  loop_control:
    label: "{{ item.username }}"

- name: Applying k8s user configurations
  raw: kubectl apply -f ~/k8s-configs/k8s-user-{{item.username}}.yml
  with_items: "{{ students }}"
  loop_control:
    label: "{{ item.username }}"

- name: Copy student kubeconfig generation script
  copy:
    src: files/generate-user-k8s-config.sh
    dest: ~/k8s-configs/generate-user-k8s-config.sh
    mode: 0755

- name: Running kubeconfig generation script for students
  shell: ~/k8s-configs/generate-user-k8s-config.sh {{ item.username }} {{ current_machine_ipaddress }} {{ cluster_name }}
  with_items: "{{ students }}"
  loop_control:
    label: "{{ item.username }}"

- name: Creating PersistentVolume folders
  file:
    path: /home/{{ item.username }}/{{ pv_basename }}
    state: directory
    owner: "{{ item.username }}"
    group: "{{ item.username }}"
  with_items: "{{ students }}"
  loop_control:
    label: "{{ item.username }}"

- name: Generate file with user PersistentVolume configuration
  become: true
  template:
    src: "k8s-user-pv.yml.j2"
    dest: "~/k8s-configs/k8s-user-pv-{{item.username}}.yml"
  with_items: "{{ students }}"
  loop_control:
    label: "{{ item.username }}"

- name: Applying k8s configurations for PersistentVolumes
  become: true
  raw: kubectl apply -f ~/k8s-configs/k8s-user-pv-{{item.username}}.yml
  with_items: "{{ students }}"
  loop_control:
    label: "{{ item.username }}"
